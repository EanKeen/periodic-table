//main: ./main.scss

// Groups are columns and periods are rows
// Extra 1 for labeling the rows and columns
$total-groups: (18*2);
$total-periods: (7*2);

// The width and height of each element in the periodic table
$element-width: 100% / $total-groups;
$element-height: 40px;

// Div outisde of the grid
#table-container-outer {
  background-color: $oc-gray-1;
  border-radius: $border-radius;
  margin-top: 20px;
  min-width: $minimum-width;
}

// The grid itself
#table-container {
  display: grid;
  grid-template-columns: repeat($total-groups, $element-width);
  grid-template-rows: repeat($total-periods, $element-height);
  padding: 10px 10px 10px 10px;
}

// The actual element, (what is being duplicated) (same as selector .element-outer {})
#table-container > div {
  background-color: $oc-gray-4;
  border-radius: 5px;
  margin: 2px 2px 2px 2px;
  box-shadow: 3px 3px 3px $oc-gray-3;
  transition: background-color 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out;
  overflow: hidden;
}

#table-container > div:hover {
  background-color: $oc-gray-5;
  box-shadow: 5px 5px 5px $oc-gray-3;
  transition: background-color 0.15s ease-in-out;
  transition: background-color 0.15s ease-in-out;
  cursor: pointer;
}

.element-inner {
  justify-self: center; //Center horizontally
  margin: 2px 2px 2px 4px;
}

// The text inside each element
.atomicMass {
  position: relative;
  bottom: -3px;
}

// Large element with larger information about each element
#element-overview {
  border-radius: 5px;
  background-color: $oc-gray-3;
  grid-column-start: 6;
  grid-column-end: 12;
  grid-row-start: 1;
  grid-row-end: 6;
}

#element-overview-inner {
  $element-view-inner-width: 85%;
  justify-self: center;
  width: $element-view-inner-width;
  $element-view-margin: (100% - $element-view-inner-width)/2;
  margin: $element-view-margin $element-view-margin $element-view-margin $element-view-margin;
}

// Description with more info of the element (right of #element-overview)
#element-desc {

}

#element-desc-inner {

}
//SCSS for loop from 1 to the total number of groups in the periodic table (columns)
// Each element is on a 2 by 2 grid, which is why $i * 2.(Want it to start every two columns/rows)
// ($i * 2) - 1 because for loop starts at 1, and 1 * 2 is 2, but CSS grids start at 1
// ($i * 2) + 1 because the difference between grid-column-start and grid-column-end must be 2

@for $i from 1 through $total-groups {
  // For each DOM element with the g-$i class, place it starting at a certain column,
  // and end it before the very next column
  // Note, all g-$i classes are div elements
  // Note, g-$i classes were created using v-bind, in a for loop for each element
  // Note, g-$i stands for the ith group, or the nth group in which the elment is located on the periodic table
  .g-#{$i} {
    grid-column-start: #{($i * 2) - 1};
    grid-column-end: #{($i * 2) + 1};
  }
}

//SCSS for loop from 1 to the total number of periods in the periodic table (rows)
@for $i from 1 through $total-periods {
  // For each DOM element with the p-$i class, place it starting at a certain row,
  // and end it before the very next row
  // Note, all p-$i classes are div elements
  // Note, p-$i classes were created using v-bind, in a for loop for each element
  // Note, p-$i stands for the ith period, or the nth period in which the elment is located on the periodic table
  .p-#{$i} {
    grid-row-start: #{($i * 2) - 1};
    grid-row-end: #{($i * 2) + 1};
  }
}
