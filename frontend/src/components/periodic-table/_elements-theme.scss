// List of the main colors being used (this will be updated when more colors from Open-Color)
// If using all color lists, Open-Color has a variable that maps all lists
$list-of-oc-colors: (
        $oc-red-list: 'red',
        $oc-pink-list: 'pink',
        $oc-grape-list: 'grape',
        $oc-violet-list: 'violet',
        $oc-indigo-list: 'indigo',
        $oc-blue-list: 'blue',
        $oc-cyan-list: 'cyan',
        $oc-teal-list: 'teal',
        $oc-green-list: 'green',
        $oc-lime-list: 'lime',
        $oc-yellow-list: 'yellow',
        $oc-orange-list: 'orange'
);


// @param 1  $colorShade  The type of color shade (ex. supdark-, dark-)
// @param 2  $hasBackgroundColor  Boolean for if there should be a background-color for that particular colorShade. It false, the element background would have the same color as the grid behind it
// @param 3  $backgroundColor  Color of the background of the element
// @param 4  textColor  Color of the text of each element
// Note: There isn't a $hasTextColor because there will always be text, that has some color

// Purpose: For each of the 118 elements, change their background color and text color,
// depending on if they are not hovered, hovered, or clicked.
@mixin elementsThemeColors($colorShade, $hasBackgroundColor, $backgroundColor, $textColor) {
  @each $colorList, $colorString in $list-of-oc-colors {
    .#{$colorShade}#{$colorString} {
      background-color: map-get($colorList, #{$backgroundColor});
    }
  }

  @each $colorList, $colorString in $list-of-oc-colors {
    .#{$colorShade}#{$colorString} p {
      color: map-get($oc-gray-list, #{$textColor});
    }
  }
}

//  Example output from using: @include elementsThemeColors('light-', true, 1, 6);
//  .light-blue {
//    background-color: #d0ebff;
//  }
//
//  .light-red {
//    background-color: #ffe3e3;
//  }
//
//  .light-green {
//    background-color: #d3f9d8;
//  }
//  ...
//
//  .light-blue p {
//    color: #868e96;
//  }
//
//  .light-red p {
//    color: #868e96;
//  }
//
//  .light-green p {
//    color: #868e96;
//  }
//  ...








// @param 1  $hasShadow  Boolean for if the element has a shadow
// @param 2  $shadow  Normal shadow for the element
// @param 3  $shadowHover Shadow on hover of the element

// Purpose: For each of the 118 elements, change their shadow, if they have one, depending if
// they are being hovered or not
@mixin elementsThemeShadow($hasShadow, $shadow, $shadowHover) {
  @if($hasShadow) {
    .element {
      box-shadow: 2px 2px 3px $shadow;
    }

    .element:hover {
      box-shadow: 2px 2px 4px $shadowHover;
    }
  }
}
