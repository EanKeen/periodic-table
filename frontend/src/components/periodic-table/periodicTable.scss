// Add 5 to rows for the "f" block elements
$total-columns: (18 * 2);
$total-rows: (7 * 2) + 5;

// GRID-CONTAINER-OUTER \\
// Just for position relative
#grid-container-outer {
  position: relative;
  border-radius: $border-radius;
  transition: all $transition-duration ease-in-out;
}

#grid-container-outer:hover {
  transition: all $transition-duration ease-in-out;
}

#grid-container-loading-view {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

// GRID-CONTAINER \\
#grid-container {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: $border-radius;
  overflow: auto;
}

// GRID-OUTER \\
// Holds aspect ratio
#grid-outer {
  // start with 0.6 so don't have to depend on javascript to start to get right ratio
  // if change here, change in PeriodicTable.vue
  --periodicTableWidthRatio: 0.6;

  position: relative;
  height: 0;
  width: 100%;
  padding-bottom: calc(100% * var(--periodicTableWidthRatio));
  border-radius: $border-radius;
}

#grid-outer.stretchVertically {
  //height: 100%;
  height: calc(100% - 2px);
  //width: 100%;
  width: var(--periodicTableWidth);
}

// GRID \\
// Main grid
#grid {
  // Contains CSS vars for text sizing
  --primaryTextSize: 0;
  --secondaryTextSize: 0;
  --labelTextSize: 0;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: grid;
  // IF You change the 2.8% and 5.8%, then all the font size scaling will have to readjust
  grid-template-columns: 2.8% repeat($total-columns, 1fr);
  grid-template-rows: 5% repeat($total-rows, 1fr);
  padding: 4px;
  border-radius: $border-radius;
  transition: all $transition-duration ease-in-out;
}

// I think this works
// TODO: Check if this works
#grid #grid-outer:hover {
  transition: all $transition-duration ease-in-out;
}
